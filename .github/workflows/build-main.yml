name: build main

on:
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    steps:

      - uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Cache local Maven repository
        uses: actions/cache@v2.1.7
        env:
          cache-name: cache-mvn
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Build Tag with Maven
        if: ${{ github.ref_type == 'tag' }}
        run: |
          mvn -B clean verify -Pcoverage -Drevision=${{ github.ref_name }}

      - name: Build Branch with Maven
        if: ${{ github.ref_type == 'branch' }}
        run: |
          mvn -B clean verify -Pcoverage

      - uses: codecov/codecov-action@v2
        with:
          files: "**/target/site/jacoco/jacoco.xml"

  publish-snapshot:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up settings.xml for GitHub Packages
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          server-id: 'nexus'
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

      - name: Cache local Maven repository
        uses: actions/cache@v2.1.7
        env:
          cache-name: cache-mvn
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Publish SNAPSHOT version to GitHub Packages (we can skip tests, since we only deploy, if the build workflow succeeded)
        run: mvn -B --no-transfer-progress deploy -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

#      - name: Extract Maven project version for Asciidoc GitHub Pages directory naming
#        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
#        id: project

#      - name: Show extracted Maven project version
#        run: echo ${{ steps.project.outputs.version }}

#      - name: Deploy Asciidoc docs output to GitHub Pages
#        uses: JamesIves/github-pages-deploy-action@v4.3.3
#        with:
#          branch: gh-pages # The branch the action should deploy to.
#          folder: batch-web-spring-boot-docs/target/generated-docs # The folder the action should deploy.
#          target-folder: ${{ steps.project.outputs.version }}
#          clean: true # Automatically remove deleted files from the deploy branch
